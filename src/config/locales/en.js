import { defineMessages } from 'react-intl';

const messages = defineMessages({
  app_name: 'React Most Wanted',
  sign_in: 'Sign in',
  sign_out: 'Sign out',
  sign_up: 'Sign up',
  email: 'Email',
  username: 'Username',
  password: 'Password',
  about: 'About',
  home: 'Home',
  page_not_found: 'Page not found',
  settings: 'Settings',
  theme: 'Theme',
  default: 'Default',
  pink: 'Pink',
  green: 'Green',
  language: 'Language',
  en: 'English',
  es: 'Spanish',
  menu: 'Menu',
  menu_mini_mode: 'Mini menu',
  offline: 'Offline',
  demos: 'Demos',
  dialog_demo: 'Create user',
  dialog_title: 'Dialog title',
  dialog_action: 'YES, Delete',
  dialog_message: `Dialog message. You can put as much text as you want here.
  Ask a question or show a warning before deleting something.
  You can also set the action text to something like "YES, Delete" and run that action by passing a "handleAction" prop.
  This receives a "handleClose" callback with which you can close the dialog when your action is done.`,
  toast_demo: 'Create home',
  filter_demo: 'Demo filter',
  list_page_demo: 'List Page demo with {count} rows',
  forgot_password: 'Forgot password',
  password_reset: 'Password reset',
  password_confirm: 'Password confirm',
  registration: 'Registration',
  my_account: 'My account',
  delete_account_dialog_title: 'Delete Account?',
  delete_account_dialog_message:
    'Your account will be deleted and you will lose all your data!',
  delete_account_dialog_action: 'Delete account',
  cruds: 'Register',
  addUser: 'User created',
  addHome: 'Home created',
  dashboard: 'Dashboard',
  history: 'Entry History',
  resident: 'Resident',
  guard: 'Guard',
  admin: 'Administrator',
  save: 'Save',
  user_type: 'User type',
  homeN: 'Home Number',
  rut: 'Rut',
  userExists: 'User already exists',
  wrongData: 'Wrong data. Please, check again',
  password_set: 'Create a password',
  invitation_info: 'Create Invitation',
  name: 'Name',
  last_name: 'Last Name',
  plate: 'License Plate',
  invitation_date: 'Invitation Date',
  start_time: 'Start Time',
  end_time: 'End Time',
  date_str: 'Invitation Date',
  rutError: 'Invalid RUT',
  entry: 'Register Entry',
  supplier: 'Register Supplier',
  select_contact: 'Select Contact',
  valid_visit: 'Valid invitation.',
  unrecognized_plate: 'Unrecognized plates',
  visit_regist: 'visit successfully registered',
  invitation_history: 'Invitation History',
  userlastname: 'Last name',
  changePassword: 'Change Password',
  password_error: 'Error updating your password. Try again',
  saved_invitation: 'Fill in the information of a previously created guest',

});

export default messages;
